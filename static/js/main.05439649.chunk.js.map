{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classname","TodoList","todos","map","firstTodos","userId","usersFromServer","find","App","useState","todoTitle","setTodoTitle","hasTitleError","setHasTitleError","userSelectedId","setUserSelectedId","hasUserSelectedId","setHasUserSelectedId","preparedTodos","setPreparedTodos","action","method","onSubmit","event","preventDefault","Boolean","todoId","maxTodoId","Math","max","currentTodo","htmlFor","type","placeholder","value","onChange","target","defaultValue","required","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05439649.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User | null,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${user?.email}`}\n    >\n      {user?.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classname from 'classnames';\nimport { TodoWithUser } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: TodoWithUser,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      key={id}\n      data-id={id}\n      className={classname('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoWithUser } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: TodoWithUser[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoWithUser } from './types/Todo';\nimport { TodoList } from './components/TodoList';\n\nexport const firstTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: usersFromServer.find(({ id }) => id === todo.userId) || null,\n}));\n\nexport const App = () => {\n  const [todoTitle, setTodoTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [userSelectedId, setUserSelectedId] = useState(0);\n  const [hasUserSelectedId, setHasUserSelectedId] = useState(false);\n  const [preparedTodos, setPreparedTodos] = useState(firstTodos);\n\n  function getUserById(userId: number) {\n    return usersFromServer.find(({ id }) => id === userId) || null;\n  }\n\n  function onSubmit(todo: TodoWithUser) {\n    setPreparedTodos(currentTodo => [...currentTodo, todo]);\n  }\n\n  function formReset() {\n    setTodoTitle('');\n    setUserSelectedId(0);\n  }\n\n  function handleInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setTodoTitle(event.target.value);\n    setHasTitleError(false);\n  }\n\n  function handleUserSelect(event: React.ChangeEvent<HTMLSelectElement>) {\n    setUserSelectedId(+event.target.value);\n    setHasUserSelectedId(false);\n  }\n\n  const handleOnSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!todoTitle || !userSelectedId) {\n      setHasTitleError(Boolean(!todoTitle));\n      setHasUserSelectedId(Boolean(!userSelectedId));\n\n      return;\n    }\n\n    const todoId = preparedTodos.map(({ id }) => id);\n    const maxTodoId = Math.max(...todoId) + 1;\n\n    onSubmit({\n      id: maxTodoId,\n      title: todoTitle,\n      completed: false,\n      userId: userSelectedId,\n      user: getUserById(userSelectedId),\n    });\n\n    formReset();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>\n        Add todo form\n      </h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleOnSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">\n            Title:\n          </label>\n\n          <input\n            id=\"titleInput\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={todoTitle}\n            onChange={handleInputChange}\n          />\n\n          {hasTitleError && (\n            <span className=\"error\">\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">\n            User:\n          </label>\n\n          <select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            defaultValue={0}\n            value={userSelectedId}\n            onChange={handleUserSelect}\n            required\n          >\n            <option value=\"0\">\n              Choose a user\n            </option>\n\n            {usersFromServer.map(({ id, name }) => (\n              <option key={id} value={id}>\n                {name}\n              </option>\n            ))}\n          </select>\n\n          {hasUserSelectedId && (\n            <span className=\"error\">\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={preparedTodos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}